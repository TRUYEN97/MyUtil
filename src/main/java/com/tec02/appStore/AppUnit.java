/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.tec02.appStore;

import com.tec02.appStore.analysis.AppProccess;
import com.tec02.common.JOptionUtil;
import com.tec02.communication.Communicate.Impl.Cmd.Cmd;
import com.tec02.gui.Panelupdate;
import com.tec02.gui.frameGui.Component.PopupMenu;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Desktop;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import javax.swing.JPasswordField;

/**
 *
 * @author 21AK22
 */
public class AppUnit extends Panelupdate {

    private final Color bgColor;
    private final PopupMenu popupMenu;
    private Thread thread;
    private AppProccess appProccess;

    /**
     * Creates new form AppUnit
     *
     * @param bgColor
     */
    public AppUnit(Color bgColor) {
        this.bgColor = bgColor;
        initComponents();
        this.setBackground(bgColor);
        this.popupMenu = new PopupMenu();
        this.popupMenu.addItemMenu("Run", (e) -> {
            runApp();
        });
        this.popupMenu.addItemMenu("Stop", (e) -> {
            stop();
        });
        this.popupMenu.addItemMenu("Open file location", (e) -> {
            if (appProccess == null) {
                return;
            }
            if (Desktop.isDesktopSupported()) {
                Desktop desktop = Desktop.getDesktop();
                File file = appProccess.getFileLocation();
                if (file.exists()) {
                    if (System.getProperty("os.name").toLowerCase().contains("win")) {
                        Cmd cmd = new Cmd();
                        cmd.sendCommand("explorer.exe /select,%s", file.getPath());
                    } else {
                        try {
                            desktop.open(file.getParentFile());
                        } catch (IOException ex) {
                            ex.printStackTrace();
                        }
                    }
                }
            }
        });
        this.popupMenu.addItemMenu("Show Description", (e) -> {

        });

    }

    private void runApp() {
        if (this.appProccess.isRuning()) {
            JOptionUtil.showMessage("%s is runing", this.appProccess.getAppName());
        } else {
            if (appProccess == null) {
                return;
            }
            setCursor(new Cursor(Cursor.WAIT_CURSOR));
            appProccess.runApp();
            setCursor(Cursor.getDefaultCursor());
        }
    }

//
//    /**
//     * This method is called from within the constructor to initialize the form.
//     * WARNING: Do NOT modify this code. The content of this method is always
//     * regenerated by the Form Editor.
//     */
    public void setAppProccess(AppProccess appProccess) {
        AppUnit.this.appProccess = appProccess;
        display();
    }

    public void clear() {
        this.appProccess = null;
        this.lb_icon.setIcon(null);
        this.lbName.setText(null);
        this.validate();
    }

//    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnAppVid = new javax.swing.JPanel();
        lb_icon = new javax.swing.JLabel();
        lbName = new javax.swing.JLabel();

        setAlignmentX(0.1F);
        setAlignmentY(0.1F);
        setPreferredSize(new java.awt.Dimension(100, 120));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                formMouseExited(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        lb_icon.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lb_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_icon.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lb_icon.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout pnAppVidLayout = new javax.swing.GroupLayout(pnAppVid);
        pnAppVid.setLayout(pnAppVidLayout);
        pnAppVidLayout.setHorizontalGroup(
            pnAppVidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnAppVidLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lb_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnAppVidLayout.setVerticalGroup(
            pnAppVidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnAppVidLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lb_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lbName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbName.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(pnAppVid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
            .addComponent(lbName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(pnAppVid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        // TODO add your handling code here: 
        if (appProccess == null) {
            return;
        }
        this.pnAppVid.setBackground(bgColor.darker());
        this.setToolTipText(appProccess.getAppName());
    }//GEN-LAST:event_formMouseEntered

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        if (appProccess == null) {
            return;
        }
        if (evt.getClickCount() > 1 && evt.getButton() == MouseEvent.BUTTON1) {
            runApp();
        } else if (evt.getButton() == MouseEvent.BUTTON3) {
            this.popupMenu.show(evt.getComponent(), evt.getX(), evt.getY());
        }

    }//GEN-LAST:event_formMouseClicked

    private void formMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseExited
        // TODO add your handling code here:
        this.pnAppVid.setBackground(bgColor);
    }//GEN-LAST:event_formMouseExited

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        // TODO add your handling code here:
        if (appProccess == null) {
            return;
        }
        showIcon();
    }//GEN-LAST:event_formComponentResized


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lb_icon;
    private javax.swing.JPanel pnAppVid;
    // End of variables declaration//GEN-END:variables

    private void display() {
        if (appProccess == null) {
            return;
        }
        showIcon();
        showAppName();
        this.validate();
    }

    private void showAppName() {
        this.lb_icon.setVisible(false);
        this.lbName.setText(appProccess.getAppName());
        this.lb_icon.setVisible(true);
    }

    private void showIcon() {
        if (appProccess != null) {
            this.lb_icon.setIcon(appProccess.getIcon(50, 50));
        }
    }

    public boolean containAppID(Object id) {
        if (appProccess == null) {
            return false;
        }
        return appProccess.getId().equals(id);
    }

    public boolean isFree() {
        return appProccess == null;
    }

    private void stop() {
        this.appProccess.stopRun();
    }
}
