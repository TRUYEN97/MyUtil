/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.tec02.gui.frameGui.treeFile;

import com.alibaba.fastjson.JSONObject;
import com.tec02.common.JsonBodyAPI;
import com.tec02.common.RequestParam;
import com.tec02.common.RestAPI;
import com.tec02.common.RestUtil;
import com.tec02.gui.frameGui.AbsDisplayAble;
import com.tec02.gui.frameGui.Component.MyChooser;
import com.tec02.gui.frameGui.Component.MyTable;
import com.tec02.gui.frameGui.Component.PopupMenu;
import java.awt.HeadlessException;
import java.io.File;
import java.nio.file.Path;
import java.util.List;
import java.util.Map;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Administrator
 */
public class UpdateFile extends AbsDisplayAble {

    private static final String DIR = "dir";
    private static final String FILE_ID = "id";
    private static final String FGROUP_ID = "fgroupId";
    private static final String NAME = "name";
    private static final String DESCRIPTION = "description";
    private static final String VERSION = "version";
    private final MyChooser chooser;
    private final RestUtil restUtil;
    private final MyTable myTable;
    private final TreeFolder treeFolder;
    private String urlAdd;
    private String urlGetVersion;
    private String urlGet;
    private String urlGetDownload;
    private String urlPut;
    private Object fgroupId;
    private Object fileID;

    /**
     * Creates new form ChooseFile
     *
     * @param restAPI
     */
    public UpdateFile(RestAPI restAPI) {
        initComponents();
        this.restUtil = new RestUtil(restAPI);
        this.chooser = new MyChooser();
        this.myTable = new MyTable(tbShowVersions);
        this.treeFolder = new TreeFolder(tree, false);
        PopupMenu menu = this.treeFolder.getPopupMenu();
        menu.addItemMenu("update tree", (e) -> {
            getAllFile();
        });
        this.treeFolder.setDoubleClickAction((evt) -> {
            TreeFolder.FileNode fileNode = this.treeFolder.getNodeSelected();
            if (fileNode == null || fileNode.isFolder()) {
                initNewFileFormat(fileNode);
            } else {
                showFileSeclectedInfo(fileNode);
            }
        });
        this.myTable.setDoubleClickAction((evt) -> {
            Map<String, Object> map = myTable.getRowSelectedMapValue();
            txtAreaDes.setText(getInfomation(map));
        });
        PopupMenu tbMenu = this.myTable.getMenu();
        tbMenu.addItemMenu("Save", (e) -> {
            Object version = myTable.getRowSelectedValue(NAME);
            if (version == null) {
                return;
            }
            this.restUtil.downloadFileSaveByChooseFile(urlGetDownload,
                    RequestParam.builder()
                            .addParam(FILE_ID, fileID)
                            .addParam(VERSION, version)
            );
        });
    }

    public void setUrlGetDownload(String urlGetDownload) {
        this.urlGetDownload = urlGetDownload;
    }
    
    

    private void showFileSeclectedInfo(TreeFolder.FileNode fileNode) throws HeadlessException {
        getFileVersion(fileID = fileNode.getData(FILE_ID));
        Path path = fileNode.getNodePath();
        lbID.setText(String.format("File: %s - %s", fileID,
                fileNode.getData(NAME)));
        this.txtFolder.setText(path.getParent() == null ? null : path.getParent().toString());
        this.txtName.setText(path.getFileName() == null ? null : path.getFileName().toString());
    }

    private void getFileVersion(Object id) throws HeadlessException {
        List<JSONObject> list = this.restUtil.getList(urlGetVersion, RequestParam.builder()
                .addParam(FILE_ID, id));
        this.myTable.setDatas(list);
        if (list != null && !list.isEmpty()) {
            this.txtVersion.setText(list.get(0).getString(NAME));
            this.txtAreaDes.setText(getInfomation(list.get(0)));
        }
    }

    private void initNewFileFormat(TreeFolder.FileNode fileNode) {
        clearInfo();
        if (fileNode != null) {
            this.txtFolder.setText(fileNode.getNodePath().toString());
        }
        lbID.setText("New file");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btUpload = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        txtName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtFolder = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtLocalFile = new javax.swing.JTextField();
        txtVersion = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        lbID = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAreaDes = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbShowVersions = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tree = new javax.swing.JTree();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("File Info"));

        btUpload.setText("UpLoad");
        btUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUploadActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtName.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("File name");

        txtFolder.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtFolder.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Folder");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Choose file");

        txtLocalFile.setEditable(false);
        txtLocalFile.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtLocalFile.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtLocalFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtLocalFileMouseClicked(evt);
            }
        });

        txtVersion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtVersion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtVersion.setText("1.0.0");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Version");

        lbID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbID, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtFolder, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLocalFile, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lbID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLocalFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtVersion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Description"));
        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.LINE_AXIS));

        txtAreaDes.setColumns(20);
        txtAreaDes.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtAreaDes.setRows(5);
        txtAreaDes.setTabSize(2);
        jScrollPane3.setViewportView(txtAreaDes);

        jPanel4.add(jScrollPane3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 592, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btUpload)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btUpload)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        tbShowVersions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tbShowVersions);

        jPanel2.add(jScrollPane1);

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.LINE_AXIS));

        tree.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jScrollPane2.setViewportView(tree);

        jPanel3.add(jScrollPane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUploadActionPerformed
        String name = txtName.getText();
        String folder = txtFolder.getText();
        String filePath = txtLocalFile.getText();
        String version = txtVersion.getText();
        if (name == null || name.isBlank()) {
            JOptionPane.showMessageDialog(rootPane, "file name is empty!");
            return;
        }
        if (version == null || version.isBlank()) {
            JOptionPane.showMessageDialog(rootPane, "version is empty!");
            return;
        }
        String des = txtAreaDes.getText();
        if (des == null) {
            return;
        } else if (des.isBlank()) {
            JOptionPane.showMessageDialog(rootPane, "Description is empty!");
            return;
        }
        if (filePath == null || filePath.isBlank()) {
            if (this.restUtil.update(urlPut, null,
                    JsonBodyAPI.builder()
                            .put(FGROUP_ID, fgroupId)
                            .put(FILE_ID, fileID)
                            .put(NAME, name)
                            .put(DIR, folder))) {
                getAllFile();
            }
        } else {
            if (this.restUtil.uploadFile(urlAdd,
                    new JsonBodyAPI().put(DIR, folder)
                            .put(FILE_ID, fileID)
                            .put(NAME, name)
                            .put(VERSION, version)
                            .put(DESCRIPTION, des)
                            .put(FGROUP_ID, fgroupId),
                    filePath)) {
                if (fileID == null) {
                    getAllFile();
                } else {
                    getFileVersion(fileID);
                }
            }
        }

    }//GEN-LAST:event_btUploadActionPerformed

    private void txtLocalFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtLocalFileMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() > 1 && this.chooser.showOpenFile(rootPane, "") == JFileChooser.APPROVE_OPTION) {
            txtAreaDes.setText(null);
            File file = this.chooser.getSelectedFile();
            txtLocalFile.setText(file.getPath());
        }
    }//GEN-LAST:event_txtLocalFileMouseClicked

    public void display(Object fgId, String groupName) {
        this.fgroupId = fgId;
        super.display(String.format("Group: %s", groupName));
        getAllFile();
    }

    private void getAllFile() throws HeadlessException {
        new Thread() {
            @Override
            public void run() {
                List<JSONObject> list = restUtil.getList(urlGet, RequestParam.builder().addParam("id", fgroupId));
                clear();
                for (JSONObject fileInfo : list) {
                    treeFolder.addFile(fileInfo.getString("path"), fileInfo.getString(NAME), fileInfo);
                }
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                }
                treeFolder.refresh();
            }
        }.start();
    }

    public void setUrlPut(String urlPut) {
        this.urlPut = urlPut;
    }

    public void clear() {
        this.treeFolder.clear();
        clearInfo();
    }

    private void clearInfo() {
        this.myTable.clear();
        this.txtFolder.setText(null);
        this.txtLocalFile.setText(null);
        this.txtName.setText(null);
        this.txtVersion.setText("1.0.0");
        this.txtAreaDes.setText(null);
        this.fileID = null;
    }

    public void setUrlGetVersion(String urlGetVersion) {
        this.urlGetVersion = urlGetVersion;
    }

    public void setUrlAdd(String urlAdd) {
        this.urlAdd = urlAdd;
    }

    public String getUrlAdd() {
        return urlAdd;
    }

    public void setFgroupId(Object fgroupId) {
        this.fgroupId = fgroupId;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btUpload;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbID;
    private javax.swing.JTable tbShowVersions;
    private javax.swing.JTree tree;
    private javax.swing.JTextArea txtAreaDes;
    private javax.swing.JTextField txtFolder;
    private javax.swing.JTextField txtLocalFile;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtVersion;
    // End of variables declaration//GEN-END:variables

    public void setUrlGet(String urlGet) {
        this.urlGet = urlGet;
    }

    private String getInfomation(Map map) {
        return String.format("Version: %s\r\nMD5: %s\r\nDetail: %s",
                map.get(NAME),
                map.get("md5"),
                map.get(DESCRIPTION));
    }

}
