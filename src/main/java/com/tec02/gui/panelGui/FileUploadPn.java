/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.tec02.gui.panelGui;

import com.tec02.gui.IAction;
import com.tec02.gui.Panelupdate;
import com.tec02.gui.frameGui.Component.MyChooser;
import java.io.File;
import javax.swing.JFileChooser;

/**
 *
 * @author Administrator
 */
public class FileUploadPn extends Panelupdate {

    private String dir = "";
    private String fileName = "";
    private String version = "";
    private boolean enable = false;
    private final MyChooser chooser;
    private File[] files;
    private IAction<FileUploadPn> uploadAction;
    private boolean isOnlyOneFile = false;

    /**
     * Creates new form FileUploadPn
     */
    public FileUploadPn() {
        initComponents();
        this.chooser = new MyChooser();
    }

    public void setIsOnlyOneFile(boolean isOnlyOneFile) {
        this.isOnlyOneFile = isOnlyOneFile;
    }

    public String getDescriptiton() {
        return txtAreaDes.getText();
    }

    public void setUploadAction(IAction<FileUploadPn> uploadAction) {
        this.uploadAction = uploadAction;
    }

    public String getDir() {
        return this.txtFolder.getText();
    }

    public String getFileName() {
        return this.txtName.getText();
    }

    public void setFileName(String fileName) {
        this.txtName.setText(fileName);
        this.fileName = this.txtName.getText();
    }

    public void setDir(String dir) {
        this.txtFolder.setText(dir);
        this.dir = this.txtFolder.getText();
    }

    public String getVersion() {
        return this.txtVersion.getText();
    }

    public void setVersion(String version) {
        this.txtVersion.setText(version);
        this.version = this.txtVersion.getText();
    }

    public void setLbID(String str) {
        this.lbID.setText(str);
    }

    public void setDescription(String description) {
        this.txtAreaDes.setText(description);
    }

    public boolean isCheckBoxSelected() {
        return this.cbEnable.isSelected();
    }

    public void setCheckBox(boolean enable) {
        this.cbEnable.setSelected(enable);
        this.enable = this.cbEnable.isSelected();
    }

    public boolean hasChanged() {
        return this.enable != isCheckBoxSelected() || !this.dir.equals(getDir())
                || !this.version.equals(getVersion())
                || !this.fileName.equals(getFileName())
                || files.length != 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btUpload = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        txtName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtFolder = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtVersion = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        lbID = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtAreaLocalFolder = new javax.swing.JTextArea();
        cbEnable = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAreaDes = new javax.swing.JTextArea();

        btUpload.setText("UpLoad");
        btUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUploadActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtName.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("File name");

        txtFolder.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtFolder.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Folder");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Choose file");

        txtVersion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtVersion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtVersion.setText("1.0.0");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Version");

        lbID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtAreaLocalFolder.setEditable(false);
        txtAreaLocalFolder.setColumns(20);
        txtAreaLocalFolder.setRows(5);
        txtAreaLocalFolder.setTabSize(1);
        txtAreaLocalFolder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtAreaLocalFolderMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(txtAreaLocalFolder);

        cbEnable.setSelected(true);
        cbEnable.setText("Enable");
        cbEnable.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFolder, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtVersion)
                            .addComponent(cbEnable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lbID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtVersion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbEnable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Description"));
        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.LINE_AXIS));

        txtAreaDes.setColumns(20);
        txtAreaDes.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtAreaDes.setRows(5);
        txtAreaDes.setTabSize(2);
        jScrollPane3.setViewportView(txtAreaDes);

        jPanel4.add(jScrollPane3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btUpload)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btUpload)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUploadActionPerformed
        if (this.uploadAction != null) {
            this.uploadAction.action(this);
        }
    }//GEN-LAST:event_btUploadActionPerformed

    private void txtAreaLocalFolderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAreaLocalFolderMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() > 1 && (files = hasChooseFile()) != null) {
            txtAreaDes.setText(null);
            if (files.length > 1) {
                txtAreaLocalFolder.setText(null);
                boolean a = false;
                for (File file : files) {
                    if (a) {
                        txtAreaLocalFolder.append("\r\n");
                    } else {
                        a = true;
                    }
                    txtAreaLocalFolder.append(file.getPath());
                }
            } else if (files.length == 1) {
                txtAreaLocalFolder.setText(files[0].getPath());
                if (txtName.getText().isBlank()) {
                    txtName.setText(files[0].getName());
                }
            }
        }
    }//GEN-LAST:event_txtAreaLocalFolderMouseClicked

    private File[] hasChooseFile() {
        int rs;
        if (isOnlyOneFile) {
            rs = this.chooser.showOpenFile(null, "");
        } else {
            rs = this.chooser.showOpenMitiFile(null, "");
        }
        if(rs == JFileChooser.APPROVE_OPTION){
            if(isOnlyOneFile){
                return new File[]{this.chooser.getSelectedFile()};
            }else{
                return this.chooser.getSelectedFiles();
            }
        }
        return null;
    }

    public void clear() {
        setFileName(null);
        setDir(null);
        setVersion("1.0.0");
        setCheckBox(false);
        setName(null);
        this.txtAreaLocalFolder.setText(null);
        this.txtAreaDes.setText(null);
        this.files = null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btUpload;
    private javax.swing.JCheckBox cbEnable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lbID;
    private javax.swing.JTextArea txtAreaDes;
    private javax.swing.JTextArea txtAreaLocalFolder;
    private javax.swing.JTextField txtFolder;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtVersion;
    // End of variables declaration//GEN-END:variables

    public File[] getSelectedFiles() {
        return this.files;
    }
}
