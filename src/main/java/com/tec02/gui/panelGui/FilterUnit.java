/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.tec02.gui.panelGui;

import com.tec02.gui.Panelupdate;
import java.util.Collection;
import com.tec02.Jmodel.IAction;
import com.tec02.gui.PopupMenuFilterAction;
import java.util.ArrayList;
import java.util.List;
import java.util.function.Function;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.event.PopupMenuListener;

/**
 *
 * @author Administrator
 */
public class FilterUnit extends Panelupdate {

    private IAction selectedAction;
    private PopupMenuFilterAction popupMenuListener;
    private MyFilter myFilter;

    /**
     * Creates new form FilterUnit
     *
     * @param label
     * @param selectedAction
     * @param popupMenuListener
     */
    public FilterUnit(String label, IAction selectedAction, PopupMenuFilterAction popupMenuListener) {
        initComponents();
        this.checkbox.setText(label);
        this.selectedAction = selectedAction;
        this.setPopupMenuListener(popupMenuListener);
    }

    public MyFilter getMyFilter() {
        return myFilter;
    }

    public void setMyFilter(MyFilter myFilter) {
        this.myFilter = myFilter;
    }
    
    public IAction getSelectedAction() {
        return selectedAction;
    }

    public PopupMenuListener getPopupMenuListener() {
        return popupMenuListener;
    }

    public void setCheckedAble(boolean state) {
        this.checkbox.setEnabled(state);
    }

    public IAction getAction() {
        return selectedAction;
    }

    public <T> T get(Function<DefaultComboBoxModel, T> function) {
        DefaultComboBoxModel model = (DefaultComboBoxModel) this.combobox.getModel();
        if(function == null){
            return null;
        }
        return function.apply(model);
    }
    
    public <T> List<T> getListItems(){
        List<T> rs = new ArrayList<>();
         for (int i = 0; i < combobox.getItemCount(); i++) {
            rs.add((T) this.combobox.getItemAt(i));
        }
         return rs;
    }
    
    public String getItemSelected() {
        if (!this.checkbox.isSelected()) {
            return null;
        }
        return String.valueOf(this.combobox.getSelectedItem());
    }

    public void addItem(String item) {
        this.combobox.addItem(item);
    }

    public void clear() {
        this.combobox.removeAllItems();
    }

    public void addItems(Collection<String> collection) {
        clear();
        if (collection == null) {
            return;
        }
        for (String item : collection) {
            addItem(item);
        }
        if (!collection.isEmpty()) {
            this.combobox.setSelectedIndex(0);
        }
    }

    public void setSelectedAction(IAction selectedAction) {
        this.selectedAction = selectedAction;
    }

    public final void setPopupMenuListener(PopupMenuFilterAction popupMenuListener) {
        this.popupMenuListener = popupMenuListener;
        this.combobox.addPopupMenuListener(popupMenuListener);
        if(this.popupMenuListener != null){
            this.popupMenuListener.setFilterUnit(this);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        combobox = new javax.swing.JComboBox<>();
        checkbox = new javax.swing.JCheckBox();

        combobox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboboxItemStateChanged(evt);
            }
        });

        checkbox.setSelected(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(combobox, 0, 93, Short.MAX_VALUE)
            .addComponent(checkbox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(checkbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void comboboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboboxItemStateChanged
        // TODO add your handling code here:
        if (this.selectedAction != null) {
            this.selectedAction.action(evt.getItem());
        }
    }//GEN-LAST:event_comboboxItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkbox;
    private javax.swing.JComboBox<String> combobox;
    // End of variables declaration//GEN-END:variables

    public String getLabelName() {
        return this.checkbox.getText();
    }
}
